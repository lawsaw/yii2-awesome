mixin feedbackLinks(options)
    -
        var defaults = {
            'width': '100%',
        };
        options = options ? options : {},
        options = setOptions(defaults, options);
        var separatorWidth = 20;
        var tableWidth = 0;
        var data = [
            {
                'icon': 'telegram',
                'link': common.labels.social.youtube[common.language],
                'width': '16',
                'height': '12',
            },{
                'icon': 'skype',
                'link': '#href',
                'width': '13',
                'height': '13',
            },{
                'icon': 'viber',
                'link': '#href',
                'width': '13',
                'height': '13',
            },{
                'icon': 'whatsup',
                'link': '#href',
                'width': '13',
                'height': '14',
            }
        ];

    - for(var i = 0; i < data.length; i++) {

    - tableWidth = tableWidth + parseInt(data[i].width) + separatorWidth;

    - }

    - tableWidth = parseInt(tableWidth - separatorWidth) + '';

    +table({
        'width': tableWidth,
        'align': options.align,
    })

        - for(var i = 0; i < data.length; i++) {

            +td({
                'valign': 'middle',
                'width': data[i].width,
            })
                +a({
                    'href': data[i].link,
                    'styles': {
                        'text-decoration': 'none',
                        'display': 'block',
                    }
                })
                    img(src=imagePath + data[i].icon + ".png" width=data[i].width height=data[i].height style= {'display': 'block'})

            - if(i != data.length-1) {

            +td({
                'valign': 'middle',
                'width': separatorWidth + '',
            })

            - }

            - }



mixin socialLinks(options)
    -
        var defaults = {
            'width': '100%',
        };
        options = options ? options : {};
        options = setOptions(defaults, options);
        var itemWidth = 24;
        var separatorWidth = 10;
        var tableWidth = 0;
        var data = [
            {
                'icon': 'facebook-sqr',
                'link': common.labels.social.youtube[common.language],
            },{
                'icon': 'vk-sqr',
                'link': '#href',
            },{
                'icon': 'google-plus-sqr',
                'link': '#href',
            },{
                'icon': 'telegram-sqr',
                'link': '#href',
            },{
                'icon': 'youtube-sqr',
                'link': '#href',
            }
        ];
    - for(var i = 0; i < data.length; i++) {

    - tableWidth = tableWidth + itemWidth + separatorWidth;

    - }

    - tableWidth = parseInt(tableWidth - separatorWidth) + '';

    +table({
        'width': tableWidth,
        'align': options.align,
    })

        - for(var i = 0; i < data.length; i++) {

        +td({
            'valign': 'middle',
            'width': itemWidth + '',
        })
            +a({
                'href': data[i].link,
                'styles': {
                    'text-decoration': 'none',
                    'display': 'block',
                }
            })
                img(src=imagePath + data[i].icon + ".png" width=itemWidth height=itemWidth style= {'display': 'block'})

        - if(i != data.length-1) {

        +td({
            'valign': 'middle',
            'width': separatorWidth + '',
        })

        - }

        - }



mixin iconLink(options)
    - if(!isViewOnline) { return false; }
    -
        var defaults = {
            'width': 'auto',
            'align': 'left',
            'iconWidth': '25',
            'iconHeight': '25',
            'iconName': 'play.png',
            'fontSize': fontSizeS,
            'color': colorBlue,
            'separator': 10,
            'href': '#',
        };
        options = options ? options : {};
        options = setOptions(defaults, options);
    +table({
        'width': options.width,
        'align': options.align,
    })
        +td({
            'align': 'left',
            'width': options.iconWidth + 'px',
            'valign': 'middle'
        })
            img(src=imagePath + options.iconName  width=options.iconWidth height=options.iconHeight style= {'display': 'block'})

        +td({
            'width': options.separator + 'px',
        })

        +td({
            'align': 'left',
            'valign': 'middle'
        })
            +a({
                'href': options.href,
                'target': '_self',
                'styles': {
                    'color': options.color,
                    'font-size': options.fontSize,
                    'font-family': fontFamily,
                    'text-decoration': 'none',
                    'line-height': lineHeight,
                }
            })
                if block
                    block


mixin gridContent(options)
    -
        var defaults = {
            'data': [],
            'align': 'center',
            'width': contentWidth,
        };
        options = options ? options : {};
        options = setOptions(defaults, options);
        var separatorWidth = 10;
        var cellWidth = (parseInt(options.width) - separatorWidth * (options.data.length - 1)) / 4;
    +table({
        'width': options.width
    })
        - for(var i = 0; i < options.data.length; i++) {

        +td({
            'width': cellWidth + '',
            'align': options.align,
        })
            - if(options.data[i].image) {

            +table({
                'height': options.data[i].image.cellHeight,
            })
                +td({
                    'align': options.align
                })
                    img(src=imagePath + options.data[i].image.name alt= options.data[i].title width= options.data[i].image.width height= options.data[i].image.height style= {'display': 'block'})

            +separator({
                'height': '10px',
            })

            - }

            - if(options.data[i].title) {

            +text({
                'font-size': fontSizeXS,
                'color': colorGrey,
                'text-align': 'center',
                'font-weight': 'bold',
            })= options.data[i].title

            - }

            - if(options.data[i].description) {

            +text({
                'font-size': fontSizeXS,
                'color': colorGrey,
                'text-align': 'center',
            })= options.data[i].description

            - }

        - if(i != options.data.length-1) {

        +td({
            'valign': 'middle',
            'width': separatorWidth + '',
        })

        - }

        - }

